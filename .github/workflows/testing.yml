# name: tests

# on: push

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2

#     # Install dependencies
#     - name: Set up Python
#       uses: actions/setup-python@v1
#       with:
#         python-version: "3.8"
    
#     - name: Install Linux libraries
#       run: |
#         sudo apt-get install -y libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4 \
#           libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 \
#           libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0

#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install .[dev]
#     - name: Test
#       run: |
#         make tests

name: tests

on: push

jobs:

  test:
    name: ${{ matrix.platform }} py${{ matrix.python }} ${{ matrix.toxenv }} 
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
        python: [3.7, 3.8]
        include:
          # test big sur on 3.9.0
          - python: 3.8
            platform: macos-11.0
            toxenv: py39-macos-pyqt
          # test with minimum specified requirements
          - python: 3.7
            platform: ubuntu-18.04
            MIN_REQ: 1
          # test with --async_only
          - python: 3.8
            platform: ubuntu-18.04
            toxenv: async-py38-linux-pyqt
          # test without any Qt backends


    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      # these libraries, along with pytest-xvfb (added in the `deps` in tox.ini),
      # enable testing on Qt on linux
      - name: Install Linux libraries
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4 \
            libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 \
            libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0
      # strategy borrowed from vispy for installing opengl libs on windows
      - name: Install Windows OpenGL
        if: runner.os == 'Windows'
        run: |
          git clone --depth 1 git://github.com/pyvista/gl-ci-helpers.git
          powershell gl-ci-helpers/appveyor/install_opengl.ps1
          if (Test-Path -Path "C:\Windows\system32\opengl32.dll" -PathType Leaf) {Exit 0} else {Exit 1}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install setuptools tox tox-gh-actions
          pip install -r req.txt
          pip install -r requirements_dev.txt

      # here we pass off control of environment creation and running of tests to tox
      # tox-gh-actions, installed above, helps to convert environment variables into
      # tox "factors" ... limiting the scope of what gets tested on each platform
      # The one exception is if the "toxenv" environment variable has been set,
      # in which case we are declaring one specific tox environment to run.
      # see tox.ini for more
      - name: Test with tox
        uses: GabrielBB/xvfb-action@v1
        with:
          run: tox
        env:
          PLATFORM: ${{ matrix.platform }}
          TOXENV: ${{ matrix.toxenv }}
          PYVISTA_OFF_SCREEN: True

